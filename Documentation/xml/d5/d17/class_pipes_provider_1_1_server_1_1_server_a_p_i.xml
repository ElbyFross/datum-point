<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i" kind="class" language="C#" prot="public">
    <compoundname>PipesProvider::Server::ServerAPI</compoundname>
      <sectiondef kind="event">
      <memberdef kind="event" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a01037d62fa41e0bc31d645d3459a67a9" prot="public" static="yes" add="no" remove="no" raise="no">
        <type>System.Action&lt; <ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref> &gt;</type>
        <definition>System.Action&lt;ServerTransmissionController&gt; PipesProvider.Server.ServerAPI.ServerTransmissionMeta_InProcessing</definition>
        <argsstring></argsstring>
        <name>ServerTransmissionMeta_InProcessing</name>
        <briefdescription>
<para>Event that will be called when server transmission will be registred or updated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="35" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1ac18f0fca4de6269edeb97379112e67ca" prot="private" static="yes" mutable="no">
        <type>readonly Hashtable</type>
        <definition>readonly Hashtable PipesProvider.Server.ServerAPI.openedServers</definition>
        <argsstring></argsstring>
        <name>openedServers</name>
        <initializer>= new Hashtable()</initializer>
        <briefdescription>
<para>Hashtable thast contain references to oppened pipes. Key (string) pipe_name; Value (ServerTransmissionMeta) meta data about transmition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="44" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a19601974715333ee85506d4abd322515" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.ClientToServerLoop</definition>
        <argsstring>(System.Action&lt; ServerTransmissionController, string &gt; queryHandlerCallback, string pipeName, out string guid, Security.SecurityLevel securityLevel)</argsstring>
        <name>ClientToServerLoop</name>
        <param>
          <type>System.Action&lt; <ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type><ref refid="da/d2f/namespace_pipes_provider_1_1_security_1a1a6020eca1c661a6f7140e8260502d7e" kindref="member">Security.SecurityLevel</ref></type>
          <declname>securityLevel</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe that will recive queries from clients. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback that will be called when server will recive query from clinet.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of pipe that will created. <ref refid="d1/dc6/namespace_pipes_provider_1_1_client" kindref="compound">Client</ref> will access this server using that name.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="54" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="54" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a07ba6f0c9c72131049b47deefe687d3c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.ClientToServerLoop</definition>
        <argsstring>(string guid, System.Action&lt; ServerTransmissionController, string &gt; queryHandlerCallback, string pipeName, Security.SecurityLevel securityLevel)</argsstring>
        <name>ClientToServerLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type><ref refid="da/d2f/namespace_pipes_provider_1_1_security_1a1a6020eca1c661a6f7140e8260502d7e" kindref="member">Security.SecurityLevel</ref></type>
          <declname>securityLevel</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe. Allow to customise GUID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="83" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="83" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1ad9a69115cf303bb3bddfc79a95e9b4d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.ClientToServerLoop</definition>
        <argsstring>(string guid, System.Action&lt; ServerTransmissionController, string &gt; queryHandlerCallback, string pipeName, int allowedServerInstances, Security.SecurityLevel securityLevel)</argsstring>
        <name>ClientToServerLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allowedServerInstances</declname>
        </param>
        <param>
          <type><ref refid="da/d2f/namespace_pipes_provider_1_1_security_1a1a6020eca1c661a6f7140e8260502d7e" kindref="member">Security.SecurityLevel</ref></type>
          <declname>securityLevel</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe. Allow to customise GUID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="109" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="109" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1af18d8b4e9a47d04f072b3ec8940d70e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.ClientToServerLoop</definition>
        <argsstring>(string guid, System.Action&lt; ServerTransmissionController, string &gt; queryHandlerCallback, string pipeName, PipeDirection pipeDirection, int allowedServerInstances, PipeTransmissionMode transmissionMode, PipeOptions pipeOptions, Security.SecurityLevel securityLevel)</argsstring>
        <name>ClientToServerLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>PipeDirection</type>
          <declname>pipeDirection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allowedServerInstances</declname>
        </param>
        <param>
          <type>PipeTransmissionMode</type>
          <declname>transmissionMode</declname>
        </param>
        <param>
          <type>PipeOptions</type>
          <declname>pipeOptions</declname>
        </param>
        <param>
          <type><ref refid="da/d2f/namespace_pipes_provider_1_1_security_1a1a6020eca1c661a6f7140e8260502d7e" kindref="member">Security.SecurityLevel</ref></type>
          <declname>securityLevel</declname>
        </param>
        <briefdescription>
<para><ref refid="d2/d6a/namespace_pipes_provider_1_1_server" kindref="compound">Server</ref> loop </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeDirection</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowedServerInstances</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmissionMode</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeOptions</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="138" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="138" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1ad9ecb3352296ddc3b57fc14e6033cd4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.ServerToClientLoop</definition>
        <argsstring>(string pipeName, out string guid, Security.SecurityLevel securityLevel)</argsstring>
        <name>ServerToClientLoop</name>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type><ref refid="da/d2f/namespace_pipes_provider_1_1_security_1a1a6020eca1c661a6f7140e8260502d7e" kindref="member">Security.SecurityLevel</ref></type>
          <declname>securityLevel</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe that will send message to client. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback that will be called when server will recive query from clinet.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of pipe that will created. <ref refid="d1/dc6/namespace_pipes_provider_1_1_client" kindref="compound">Client</ref> will access this server using that name.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="167" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="167" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a2e4ac901af731290f1065d08b982f32b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.ServerToClientLoop</definition>
        <argsstring>(string guid, string pipeName, Security.SecurityLevel securityLevel)</argsstring>
        <name>ServerToClientLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type><ref refid="da/d2f/namespace_pipes_provider_1_1_security_1a1a6020eca1c661a6f7140e8260502d7e" kindref="member">Security.SecurityLevel</ref></type>
          <declname>securityLevel</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe that will send message to client. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback that will be called when server will recive query from clinet.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of pipe that will created. <ref refid="d1/dc6/namespace_pipes_provider_1_1_client" kindref="compound">Client</ref> will access this server using that name.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="193" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="193" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a3dc9cedca51d49b25e4cdf30b32a4f5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.ServerLoop</definition>
        <argsstring>(string guid, System.Action&lt; ServerTransmissionController &gt; connectionCallback, System.Action&lt; ServerTransmissionController, string &gt; queryHandlerCallback, string pipeName, PipeDirection pipeDirection, int allowedServerInstances, PipeTransmissionMode transmissionMode, PipeOptions pipeOptions, Security.SecurityLevel securityLevel)</argsstring>
        <name>ServerLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref> &gt;</type>
          <declname>connectionCallback</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>PipeDirection</type>
          <declname>pipeDirection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allowedServerInstances</declname>
        </param>
        <param>
          <type>PipeTransmissionMode</type>
          <declname>transmissionMode</declname>
        </param>
        <param>
          <type>PipeOptions</type>
          <declname>pipeOptions</declname>
        </param>
        <param>
          <type><ref refid="da/d2f/namespace_pipes_provider_1_1_security_1a1a6020eca1c661a6f7140e8260502d7e" kindref="member">Security.SecurityLevel</ref></type>
          <declname>securityLevel</declname>
        </param>
        <briefdescription>
<para>Provide base server loop that control pipe. Have ability to full controll all handlers. </para>        </briefdescription>
        <detaileddescription>
<para>Warrning: Use only if undersend how it work. Overwise use simplived ClientToServerLoop or ServerToClientLoop </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Delegate that will be called when connection will be established.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of pipe that will be used to acces by client.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>Dirrection of the possible transmission.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowedServerInstances</parametername>
</parameternamelist>
<parameterdescription>
<para>How many server pipes can be started with the same name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmissionMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of transmission.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration of the pipe.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Update data. </para>        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="226" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="226" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a750e3c4f0e34e61724ab3914d0d0608e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.SetExpired</definition>
        <argsstring>(string pipeName)</argsstring>
        <name>SetExpired</name>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <briefdescription>
<para>Marking pipe as expired. On the next loop tick connections will be disconnect and pipe will close. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="347" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="347" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a6f3fd6e9d69f4bb96ba5f3c3738cf439" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.SetExpired</definition>
        <argsstring>(ServerTransmissionController meta)</argsstring>
        <name>SetExpired</name>
        <param>
          <type><ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref></type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Marking pipe as expired. On the next loop tick connections will be disconnect and pipe will close. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="365" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="365" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a6d6f42c39e7f5c8a63a026739fe0ea94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.SetExpiredAll</definition>
        <argsstring>()</argsstring>
        <name>SetExpiredAll</name>
        <briefdescription>
<para>Markin all pipes as expired. Connection will be terminated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="375" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="375" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1af9c612e584b125b1fdc2c32490613bb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.StopServer</definition>
        <argsstring>(string pipeName)</argsstring>
        <name>StopServer</name>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <briefdescription>
<para>Stop server by pipe name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="387" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="387" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a609a8bfa71dc08c179fc3785ec24a4bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.StopServer</definition>
        <argsstring>(ServerTransmissionController meta)</argsstring>
        <name>StopServer</name>
        <param>
          <type><ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref></type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Stop server by relative meta data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Log error. </para>        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="407" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="407" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a44469667416cb072d8fd258b299a53cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.Server.ServerAPI.StopAllServers</definition>
        <argsstring>()</argsstring>
        <name>StopAllServers</name>
        <briefdescription>
<para>Stoping all regirated servers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="440" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="440" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1aa6e5aaed8ff095caa67db23104e5da7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool PipesProvider.Server.ServerAPI.TryGetServerTransmissionMeta</definition>
        <argsstring>(string guid, out ServerTransmissionController meta)</argsstring>
        <name>TryGetServerTransmissionMeta</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>out <ref refid="d6/d8d/class_pipes_provider_1_1_server_1_1_server_transmission_controller" kindref="compound">ServerTransmissionController</ref></type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Try to find opened servert to client transmisssion meta data in common table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="475" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="475" bodyend="479"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that provide common methods for easy work with pipes&apos; tasks. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" line="30" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/Server/ServerAPI.cs" bodystart="29" bodyend="480"/>
    <listofallmembers>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a19601974715333ee85506d4abd322515" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>ClientToServerLoop</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a07ba6f0c9c72131049b47deefe687d3c" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>ClientToServerLoop</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1ad9a69115cf303bb3bddfc79a95e9b4d9" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>ClientToServerLoop</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1af18d8b4e9a47d04f072b3ec8940d70e2" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>ClientToServerLoop</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1ac18f0fca4de6269edeb97379112e67ca" prot="private" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>openedServers</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a3dc9cedca51d49b25e4cdf30b32a4f5b" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>ServerLoop</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1ad9ecb3352296ddc3b57fc14e6033cd4a" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>ServerToClientLoop</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a2e4ac901af731290f1065d08b982f32b" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>ServerToClientLoop</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a01037d62fa41e0bc31d645d3459a67a9" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>ServerTransmissionMeta_InProcessing</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a750e3c4f0e34e61724ab3914d0d0608e" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>SetExpired</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a6f3fd6e9d69f4bb96ba5f3c3738cf439" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>SetExpired</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a6d6f42c39e7f5c8a63a026739fe0ea94" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>SetExpiredAll</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a44469667416cb072d8fd258b299a53cd" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>StopAllServers</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1af9c612e584b125b1fdc2c32490613bb1" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>StopServer</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1a609a8bfa71dc08c179fc3785ec24a4bd" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>StopServer</name></member>
      <member refid="d5/d17/class_pipes_provider_1_1_server_1_1_server_a_p_i_1aa6e5aaed8ff095caa67db23104e5da7a" prot="public" virt="non-virtual"><scope>PipesProvider::Server::ServerAPI</scope><name>TryGetServerTransmissionMeta</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
