<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d4/ddf/class_pipes_provider_1_1_a_p_i" kind="class" language="C#" prot="public">
    <compoundname>PipesProvider::API</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a8efe588e9c6f7bf610310d9f6223a0f8" prot="private" static="yes" mutable="no">
        <type>readonly Hashtable</type>
        <definition>readonly Hashtable PipesProvider.API.openedClients</definition>
        <argsstring></argsstring>
        <name>openedClients</name>
        <initializer>= new Hashtable()</initializer>
        <briefdescription>
<para>Hashtable thast contain references to oppened pipes. Key (string) server_name.pipe_name; Value (LineProcessor) meta data about transmition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" line="37" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1ae5d6ee8740cc704d7ac5fc619349b603" prot="private" static="yes" mutable="no">
        <type>readonly Hashtable</type>
        <definition>readonly Hashtable PipesProvider.API.openedServers</definition>
        <argsstring></argsstring>
        <name>openedServers</name>
        <initializer>= new Hashtable()</initializer>
        <briefdescription>
<para>Hashtable thast contain references to oppened pipes. Key (string) pipe_name; Value (<ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref>) meta data about transmition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="44" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="event">
      <memberdef kind="event" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a88d536e98d1ea1c34d4331fef67a7561" prot="public" static="yes" add="no" remove="no" raise="no">
        <type>System.Action&lt; <ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref> &gt;</type>
        <definition>System.Action&lt;ServerTransmissionMeta&gt; PipesProvider.API.ServerTransmissionMeta_InProcessing</definition>
        <argsstring></argsstring>
        <name>ServerTransmissionMeta_InProcessing</name>
        <briefdescription>
<para>Event that will be called when server transmission will be registred or updated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="36" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a5314727d43f5fafc8630dbc814cebeac" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async void</type>
        <definition>static async void PipesProvider.API.ConnectToServerAsync</definition>
        <argsstring>(NamedPipeClientStream pipeClient, TransmissionLine lineProcessor)</argsstring>
        <name>ConnectToServerAsync</name>
        <param>
          <type>NamedPipeClientStream</type>
          <declname>pipeClient</declname>
        </param>
        <param>
          <type><ref refid="d1/d09/class_pipes_provider_1_1_transmission_line" kindref="compound">TransmissionLine</ref></type>
          <declname>lineProcessor</declname>
        </param>
        <briefdescription>
<para>Start saftely async waiting connection operation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeClient</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineProcessor</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" line="44" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" bodystart="44" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a0feeed2f76dc4292c3b85fdd054bd77e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async void</type>
        <definition>static async void PipesProvider.API.ConnectionEstablishedCallbackRetranslator</definition>
        <argsstring>(IAsyncResult result)</argsstring>
        <name>ConnectionEstablishedCallbackRetranslator</name>
        <param>
          <type>IAsyncResult</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Callback that will react on connection esstablishing. Will close waiting async operation and call shared delegate with server loop&apos;s code. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="329" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="329" bodyend="380"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1aaccf777b3b489b550739dd8adcf4a1d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.ClientLoop</definition>
        <argsstring>(TransmissionLine lineProcessor, PipeDirection pipeDirection, PipeOptions pipeOptions)</argsstring>
        <name>ClientLoop</name>
        <param>
          <type><ref refid="d1/d09/class_pipes_provider_1_1_transmission_line" kindref="compound">TransmissionLine</ref></type>
          <declname>lineProcessor</declname>
        </param>
        <param>
          <type>PipeDirection</type>
          <declname>pipeDirection</declname>
        </param>
        <param>
          <type>PipeOptions</type>
          <declname>pipeOptions</declname>
        </param>
        <briefdescription>
<para>Provide stable client loop controlled by data of LineProcessor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lineProcessor</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeDirection</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeOptions</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" line="67" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" bodystart="67" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1ae1abc16273a4b459fdbf63e68c44d11f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool PipesProvider.API.TryGetTransmissionLineByGUID</definition>
        <argsstring>(string guid, out TransmissionLine lineProcessor)</argsstring>
        <name>TryGetTransmissionLineByGUID</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>out <ref refid="d1/d09/class_pipes_provider_1_1_transmission_line" kindref="compound">TransmissionLine</ref></type>
          <declname>lineProcessor</declname>
        </param>
        <briefdescription>
<para>Try to find out registred transmission line by GUID. If client not strted then return false. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineProcessor</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" line="138" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a39e17f30d2ee8c716efeb92f947fb72e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool PipesProvider.API.TryToRegisterTransmissionLine</definition>
        <argsstring>(TransmissionLine lineProcessor)</argsstring>
        <name>TryToRegisterTransmissionLine</name>
        <param>
          <type><ref refid="d1/d09/class_pipes_provider_1_1_transmission_line" kindref="compound">TransmissionLine</ref></type>
          <declname>lineProcessor</declname>
        </param>
        <briefdescription>
<para>Trying to register transmission line in common table by key: ServerName.PipeLine </para>        </briefdescription>
        <detaileddescription>
<para>If exist return false. Retrun sycces if added to table. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lineProcessor</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" line="155" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" bodystart="155" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a99feebefadd9a40a3c1fa7175324d950" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.ClientToServerLoop</definition>
        <argsstring>(System.Action&lt; ServerTransmissionMeta, string &gt; queryHandlerCallback, string pipeName, out string guid)</argsstring>
        <name>ClientToServerLoop</name>
        <param>
          <type>System.Action&lt; <ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>guid</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe that will recive queries from clients. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback that will be called when server will recive query from clinet.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of pipe that will created. Client will access this server using that name.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="52" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="52" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a06ee04a0e80238a176b7b2cac3f6bb4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.ClientToServerLoop</definition>
        <argsstring>(string guid, System.Action&lt; ServerTransmissionMeta, string &gt; queryHandlerCallback, string pipeName)</argsstring>
        <name>ClientToServerLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe. Allow to customise GUID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="79" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="79" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a740e60d5cfd04fcc434e05b40910e493" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.ClientToServerLoop</definition>
        <argsstring>(string guid, System.Action&lt; ServerTransmissionMeta, string &gt; queryHandlerCallback, string pipeName, int allowedServerInstances)</argsstring>
        <name>ClientToServerLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allowedServerInstances</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe. Allow to customise GUID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="103" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="103" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a9eacd5177e24badabe5ac8a3fe30d5d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.ClientToServerLoop</definition>
        <argsstring>(string guid, System.Action&lt; ServerTransmissionMeta, string &gt; queryHandlerCallback, string pipeName, PipeDirection pipeDirection, int allowedServerInstances, PipeTransmissionMode transmissionMode, PipeOptions pipeOptions)</argsstring>
        <name>ClientToServerLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>PipeDirection</type>
          <declname>pipeDirection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allowedServerInstances</declname>
        </param>
        <param>
          <type>PipeTransmissionMode</type>
          <declname>transmissionMode</declname>
        </param>
        <param>
          <type>PipeOptions</type>
          <declname>pipeOptions</declname>
        </param>
        <briefdescription>
<para>Server loop </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeDirection</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowedServerInstances</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmissionMode</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeOptions</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="130" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="130" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a793d388ee138476bcea3256146851432" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.ServerToClientLoop</definition>
        <argsstring>(string pipeName, out string guid)</argsstring>
        <name>ServerToClientLoop</name>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>guid</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe that will send message to client. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback that will be called when server will recive query from clinet.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of pipe that will created. Client will access this server using that name.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="157" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="157" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1ae24aa9b5d3220b373d5689bddc22e924" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.ServerToClientLoop</definition>
        <argsstring>(string guid, string pipeName)</argsstring>
        <name>ServerToClientLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <briefdescription>
<para>Automaticly create server&apos;s pipe that will send message to client. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryHandlerCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback that will be called when server will recive query from clinet.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of pipe that will created. Client will access this server using that name.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="181" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="181" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1ab18891bb1d9c04a9c9144e0d8c89aebf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.ServerLoop</definition>
        <argsstring>(string guid, System.Action&lt; ServerTransmissionMeta &gt; connectionCallback, System.Action&lt; ServerTransmissionMeta, string &gt; queryHandlerCallback, string pipeName, PipeDirection pipeDirection, int allowedServerInstances, PipeTransmissionMode transmissionMode, PipeOptions pipeOptions)</argsstring>
        <name>ServerLoop</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref> &gt;</type>
          <declname>connectionCallback</declname>
        </param>
        <param>
          <type>System.Action&lt; <ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref>, string &gt;</type>
          <declname>queryHandlerCallback</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <param>
          <type>PipeDirection</type>
          <declname>pipeDirection</declname>
        </param>
        <param>
          <type>int</type>
          <declname>allowedServerInstances</declname>
        </param>
        <param>
          <type>PipeTransmissionMode</type>
          <declname>transmissionMode</declname>
        </param>
        <param>
          <type>PipeOptions</type>
          <declname>pipeOptions</declname>
        </param>
        <briefdescription>
<para>Provide base server loop that control pipe. Have ability to full controll all handlers. </para>        </briefdescription>
        <detaileddescription>
<para>Warrning: Use only if undersend how it work. Overwise use simplived ClientToServerLoop or ServerToClientLoop </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connectionCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Delegate that will be called when connection will be established.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of pipe that will be used to acces by client.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>Dirrection of the possible transmission.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allowedServerInstances</parametername>
</parameternamelist>
<parameterdescription>
<para>How many server pipes can be started with the same name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmissionMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of transmission.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipeOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration of the pipe.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Update data. </para>        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="212" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="212" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1ab525aaa0c87f23cfbe4ad6d0ed1b1b4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.SetExpired</definition>
        <argsstring>(string pipeName)</argsstring>
        <name>SetExpired</name>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <briefdescription>
<para>Marking pipe as expired. On the next loop tick connections will be disconnect and pipe will close. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="387" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="387" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a9bfed3a9b5733c6a76235ec096c903e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.SetExpired</definition>
        <argsstring>(ServerTransmissionMeta meta)</argsstring>
        <name>SetExpired</name>
        <param>
          <type><ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref></type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Marking pipe as expired. On the next loop tick connections will be disconnect and pipe will close. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="405" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="405" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a7e26cdf7c5b1f43abd155b4988f7bab1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.SetExpiredAll</definition>
        <argsstring>()</argsstring>
        <name>SetExpiredAll</name>
        <briefdescription>
<para>Markin all pipes as expired. Connection will be terminated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="415" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="415" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a1a81c47121d56bca83bd3cbf058d6478" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.StopServer</definition>
        <argsstring>(string pipeName)</argsstring>
        <name>StopServer</name>
        <param>
          <type>string</type>
          <declname>pipeName</declname>
        </param>
        <briefdescription>
<para>Stop server by pipe name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeName</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="427" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="427" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1aec56e2367941c5cbf6501298a946b41a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.StopServer</definition>
        <argsstring>(ServerTransmissionMeta meta)</argsstring>
        <name>StopServer</name>
        <param>
          <type><ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref></type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Stop server by relative meta data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Log error. </para>        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="447" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="447" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a5ec1b30c068984a8dbff3a5a4d41a8b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void PipesProvider.API.StopAllServers</definition>
        <argsstring>()</argsstring>
        <name>StopAllServers</name>
        <briefdescription>
<para>Stoping all regirated servers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="480" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="480" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1a5eb987a8a4edfb2b26d861071aca70a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool PipesProvider.API.TryGetServerTransmissionMeta</definition>
        <argsstring>(string guid, out ServerTransmissionMeta meta)</argsstring>
        <name>TryGetServerTransmissionMeta</name>
        <param>
          <type>string</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>out <ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">ServerTransmissionMeta</ref></type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Try to find opened servert to client transmisssion meta data in common table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="511" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="511" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1ade8af5541a5787e55fe07bad71298132" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async void</type>
        <definition>static async void PipesProvider.API.DNSHandler_ClientToSerever_Async</definition>
        <argsstring>(PipesProvider.ServerTransmissionMeta meta)</argsstring>
        <name>DNSHandler_ClientToSerever_Async</name>
        <param>
          <type><ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">PipesProvider.ServerTransmissionMeta</ref></type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Code that will work on server loop when connection will be established. Recoomended to using as default DNS Handler for queries reciving. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Avoid disconnectin error. </para>        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="523" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="523" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="d4/ddf/class_pipes_provider_1_1_a_p_i_1af1648503e83d5ecd72af553ea5d461f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async void</type>
        <definition>static async void PipesProvider.API.DNSHandler_ServerToClient_Async</definition>
        <argsstring>(PipesProvider.ServerTransmissionMeta meta)</argsstring>
        <name>DNSHandler_ServerToClient_Async</name>
        <param>
          <type><ref refid="d0/d9f/class_pipes_provider_1_1_server_transmission_meta" kindref="compound">PipesProvider.ServerTransmissionMeta</ref></type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Code that will work on server loop when connection will be established. Recoomended to using as default DNS Handler for message sending. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" line="594" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ServerAPI.cs" bodystart="594" bodyend="632"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that provide common methods for easy work with pipes&apos; tasks. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" line="31" column="1" bodyfile="D:/Work/GitHub/datum-point/PipesProvider/ClientAPI.cs" bodystart="30" bodyend="172"/>
    <listofallmembers>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1aaccf777b3b489b550739dd8adcf4a1d3" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ClientLoop</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a99feebefadd9a40a3c1fa7175324d950" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ClientToServerLoop</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a06ee04a0e80238a176b7b2cac3f6bb4b" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ClientToServerLoop</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a740e60d5cfd04fcc434e05b40910e493" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ClientToServerLoop</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a9eacd5177e24badabe5ac8a3fe30d5d3" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ClientToServerLoop</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a0feeed2f76dc4292c3b85fdd054bd77e" prot="private" virt="non-virtual"><scope>PipesProvider::API</scope><name>ConnectionEstablishedCallbackRetranslator</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a5314727d43f5fafc8630dbc814cebeac" prot="private" virt="non-virtual"><scope>PipesProvider::API</scope><name>ConnectToServerAsync</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1ade8af5541a5787e55fe07bad71298132" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>DNSHandler_ClientToSerever_Async</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1af1648503e83d5ecd72af553ea5d461f5" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>DNSHandler_ServerToClient_Async</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a8efe588e9c6f7bf610310d9f6223a0f8" prot="private" virt="non-virtual"><scope>PipesProvider::API</scope><name>openedClients</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1ae5d6ee8740cc704d7ac5fc619349b603" prot="private" virt="non-virtual"><scope>PipesProvider::API</scope><name>openedServers</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1ab18891bb1d9c04a9c9144e0d8c89aebf" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ServerLoop</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a793d388ee138476bcea3256146851432" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ServerToClientLoop</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1ae24aa9b5d3220b373d5689bddc22e924" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ServerToClientLoop</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a88d536e98d1ea1c34d4331fef67a7561" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>ServerTransmissionMeta_InProcessing</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1ab525aaa0c87f23cfbe4ad6d0ed1b1b4c" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>SetExpired</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a9bfed3a9b5733c6a76235ec096c903e3" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>SetExpired</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a7e26cdf7c5b1f43abd155b4988f7bab1" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>SetExpiredAll</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a5ec1b30c068984a8dbff3a5a4d41a8b7" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>StopAllServers</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a1a81c47121d56bca83bd3cbf058d6478" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>StopServer</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1aec56e2367941c5cbf6501298a946b41a" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>StopServer</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a5eb987a8a4edfb2b26d861071aca70a2" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>TryGetServerTransmissionMeta</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1ae1abc16273a4b459fdbf63e68c44d11f" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>TryGetTransmissionLineByGUID</name></member>
      <member refid="d4/ddf/class_pipes_provider_1_1_a_p_i_1a39e17f30d2ee8c716efeb92f947fb72e" prot="public" virt="non-virtual"><scope>PipesProvider::API</scope><name>TryToRegisterTransmissionLine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
